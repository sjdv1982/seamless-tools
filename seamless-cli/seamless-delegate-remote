set -e

export SEAMLESS_HASHSERVER_DIRECTORY="/tmp"
export SEAMLESS_DATABASE_DIRECTORY="/tmp"

assistant=$1

python3 -c '''
assistants = [
    "micro-dask-assistant-devel",
    "mini-dask-assistant-devel",
    "minifront-dask-assistant-devel"
]

import sys
if len(sys.argv) == 1:
    assistant = ""
    err = "Please select an assistant."
else:
    assistant = sys.argv[1]
    err = "Unknown assistant."
if assistant not in assistants:
    print("""ERROR: {}
Syntax: seamless-delegate-remote <assistant>

Available assistants:

{}
""".format(err, ", ".join(assistants)), file=sys.stderr)
    exit(1)
''' $assistant


set -u
currdir=`python3 -c 'import os,sys;print(os.path.dirname(os.path.realpath(sys.argv[1])))' $0`
cd $currdir
set +u -e
source ./seamless-fill-environment-variables
set -u -e

export DATABASE_PORT=$SEAMLESS_DATABASE_PORT
export HASHSERVER_PORT=$SEAMLESS_HASHSERVER_PORT
export DOCKER_GROUP_ID=$(getent group docker | cut -d: -f3)
export DOCKER_VERSION=$(docker --version)

function mapping() {
python -c 'import sys
from urllib.parse import urlsplit, urlunsplit
url = list(urlsplit(sys.argv[1]))
docker_host_ip = sys.argv[2]
for w in ("localhost", "127.0.0.1", "127.0.1.1"):
    url[1] = url[1].replace(w, docker_host_ip)
    url[2] = url[2].replace(w, docker_host_ip)
print(urlunsplit(url)) 
' $1 $2
}
export SEAMLESS_READ_BUFFER_SERVERS_MAPPED=$(mapping $SEAMLESS_READ_BUFFER_SERVERS $SEAMLESS_DOCKER_HOST_IP)
export SEAMLESS_WRITE_BUFFER_SERVER_MAPPED=$(mapping $SEAMLESS_WRITE_BUFFER_SERVER $SEAMLESS_DOCKER_HOST_IP)
export SEAMLESS_DATABASE_IP_MAPPED=$(mapping $SEAMLESS_DATABASE_IP $SEAMLESS_DOCKER_HOST_IP)

cd delegate
docker compose up $assistant --build -d
if [[ $assistant != '' ]] ; then
    sleep 5
fi    