set -e

assistant=$1

python3 -c '''
assistants = [
    "none",
    "micro-assistant", "micro-assistant-devel",
    "mini-assistant", "mini-assistant-devel",
    "micro-dask-assistant-devel", "mini-dask-assistant-devel"
]

import sys
if len(sys.argv) == 1:
    assistant = ""
    err = "Please select an assistant."
else:
    assistant = sys.argv[1]
    err = "Unknown assistant."
if assistant not in assistants:
    print("""ERROR: {}
Syntax: seamless-delegate <assistant>

Available assistants:

{}
""".format(err, ", ".join(assistants)), file=sys.stderr)
    exit(1)
''' $assistant

set +u
if [ -z "$DASK_SCHEDULER_ADDRESS" ]; then
    if [[ $assistant == mini-dask-assistant* ]] ; then
        echo 'Undefined DASK_SCHEDULER_ADDRESS' > /dev/stderr
        echo 'If you wish to run a local Dask deployment:'
        echo '- Run first "seamless-delegate none"'
        echo '- Launch a local Dask scheduler'
        echo '- Define DASK_SCHEDULER_ADDRESS'
        exit 1
    else
        export DASK_SCHEDULER_ADDRESS=-1
    fi
fi
if [[ $assistant == none ]] ; then
  assistant=''
fi
set -u
currdir=`python3 -c 'import os,sys;print(os.path.dirname(os.path.realpath(sys.argv[1])))' $0`
cd $currdir
set +u -e
source ./seamless-fill-environment-variables

if [ -z "$SEAMLESS_HASHSERVER_DIRECTORY" ]; then
  export SEAMLESS_HASHSERVER_DIRECTORY=$SEAMLESS_CONFIG_DIRECTORY/buffers
fi
if [ -z "$SEAMLESS_DATABASE_DIRECTORY" ]; then
  export SEAMLESS_DATABASE_DIRECTORY=$SEAMLESS_CONFIG_DIRECTORY/database
fi

set -u -e

mkdir -p $SEAMLESS_HASHSERVER_DIRECTORY
mkdir -p $SEAMLESS_DATABASE_DIRECTORY
touch $SEAMLESS_DATABASE_DIRECTORY/seamless.db

export DATABASE_PORT=$SEAMLESS_DATABASE_PORT
export HASHSERVER_PORT=$SEAMLESS_HASHSERVER_PORT
export DOCKER_GROUP_ID=$(getent group docker | cut -d: -f3)
export DOCKER_VERSION=$(docker --version)
ls hashserver/.git > /dev/null

function mapping() {
python -c 'import sys
from urllib.parse import urlsplit, urlunsplit
url = list(urlsplit(sys.argv[1]))
docker_host_ip = sys.argv[2]
for w in ("localhost", "127.0.0.1", "127.0.1.1"):
    url[1] = url[1].replace(w, docker_host_ip)
    url[2] = url[2].replace(w, docker_host_ip)
print(urlunsplit(url)) 
' $1 $2
}
export SEAMLESS_READ_BUFFER_SERVERS_MAPPED=$(mapping $SEAMLESS_READ_BUFFER_SERVERS $SEAMLESS_DOCKER_HOST_IP)
export SEAMLESS_WRITE_BUFFER_SERVER_MAPPED=$(mapping $SEAMLESS_WRITE_BUFFER_SERVER $SEAMLESS_DOCKER_HOST_IP)
export SEAMLESS_DATABASE_IP_MAPPED=$(mapping $SEAMLESS_DATABASE_IP $SEAMLESS_DOCKER_HOST_IP)

cd delegate
docker compose up database hashserver $assistant -d  --build
if [[ $assistant != '' ]] ; then
    sleep 5
fi    