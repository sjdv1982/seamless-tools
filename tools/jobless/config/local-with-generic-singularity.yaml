## on which IP address to listen
address: 0.0.0.0

port: 5533

## how to connect to the Seamless database
seamless_database_ip: localhost
seamless_database_port: 5522

## how to identify ourselves to Seamless instances in communion
## "null" will generate a random communion_id
communion_id: jobless

jobhandlers:
-
  ## bash, bashdocker or generic
  type: bash

  ## shell or slurm
  backend: shell

  ## where to execute job files. null => system temp dir
  job_tempdir: null

  ## The filezones where the jobs are being run, in relation to the Seamless database
  ## "the jobs are being run" means "where jobless is being run" for backend=shell
  ## For backend=slurm, it means "the file system(s) mounted on your SLURM cluster",
  ##  which may or may not be accessible to the Seamless database.
  ##
  ## The Seamless database with default configuration has a single store with filezone "local".
  ## If jobless/slurm runs on the same filesystem as the Seamless DB store, you should specify
  ##  the same filezone. This allows files for bash/bashdocker to be softlinked 
  ##  directly, rather than its buffer loaded into Seamless DB, sent over HTTP,
  ##  and written to a new file
  filezones: ["local"]

-
  type: bashdocker
  backend: shell
  job_tempdir: null
  filezones: ["local"]

  ## only for backend=slurm
  ## extra header to pre-pend to the submitted bash script
  ##  (after SBATCH -o, SBATCH -e and SBATCH --export=ALL)

  # slurm_extra_header: null


  ## only for backend=slurm
  ## how often to poll slurm (squeue -j) for job status

  # status_polling_interval: 2.0



-
  type: generic
  backend: shell
  filezones: ["local"]

  exported_conda_env_directory: /tmp/SEAMLESS-MINIMAL # make sure this directory exists, 
  
  # directory to store 
  temp_conda_env_directory: /tmp/JOBLESS-CONDA-ENV # make sure this directory exists
  temp_conda_env_lifetime: 3600


  sub_backend: singularity
  singularity_image_file: ${SEAMLESS_MINIMAL_SINGULARITY_IMAGE}
  singularity_env_modify_command: ${SEAMLESS_TOOLS_DIR}/seamless-cli-singularity/seamless-conda-env-modify
  singularity_run_transformation_command: ${SEAMLESS_TOOLS_DIR}/seamless-cli-singularity/seamless-conda-env-run-transformation


  ## only for backend=slurm
  ## extra header to pre-pend to the submitted bash script
  ##  (after SBATCH -o, SBATCH -e and SBATCH --export=ALL)

  # slurm_extra_header: null


  ## only for backend=slurm
  ## how often to poll slurm (squeue -j) for job status

  # status_polling_interval: 2.0


  ## only for type=bashdocker/generic. Use Singularity to execute.
  ## For now, type=bashdocker only supports backend=slurm

  # sub_backend: singularity


  ## only for sub_backend=singularity
  ## where are the images stored.
  ## e.g. Docker image 'rpbs/seamless'
  ##  must correspond to image file $singularity_image_dir/rpbs/seamless.sif

  # singularity_image_dir: /mnt/singularity

  ## only for sub_backend=singularity
  ## Command to execute a Singularity image
  # NOTE: with Slurm and type=bashdocker, don't use --cleanenv

  # singularity_exec: 'singularity exec'
